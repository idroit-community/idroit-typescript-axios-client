/* tslint:disable */
/* eslint-disable */
/**
 * iDroit Dashboard Admin API
 *      これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   
 *
 * OpenAPI spec version: 0.9.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import { DidInfo } from './did-info';
import { Group } from './group';
import { Mail } from './mail';
import { User } from './user';
import { UserToken } from './user-token';
import { VcInfo } from './vc-info';
import { VcSchema } from './vc-schema';
import { Verification } from './verification';
import { VpInfo } from './vp-info';
 /**
 * 
 *
 * @export
 * @interface User
 */
export interface User {

    /**
     * アカウントの識別子
     *
     * @type {string}
     * @memberof User
     * @example 123e4567-e89b-12d3-a456-426614174000
     */
    id: string;

    /**
     * アカウントの名前
     *
     * @type {string}
     * @memberof User
     * @example Jhon Doe
     */
    name: string;

    /**
     * アカウントのメールアドレス
     *
     * @type {string}
     * @memberof User
     * @example user@email.com
     */
    email: string;

    /**
     * アカウントのパスワード(8文字以上20字未満)
     *
     * @type {string}
     * @memberof User
     * @example Password1234
     */
    password: string;

    /**
     * (必須: {default: false}) アカウントの有効化フローが必要か否か(true: 必要 /false: 不要)
     *
     * @type {boolean}
     * @memberof User
     * @example false
     */
    needActivateFlow: boolean;

    /**
     * ユーザーのアカウントステータス
     *
     * @type {string}
     * @memberof User
     * @example active
     */
    status: UserStatusEnum;

    /**
     * アカウントのロール(admin/user/clinet)
     *
     * @type {string}
     * @memberof User
     * @example client
     */
    role: UserRoleEnum;

    /**
     * (任意) このアカウントを作成したユーザー
     *
     * @type {User}
     * @memberof User
     */
    createdBy?: User;

    /**
     * (任意) アカウントに紐付けされたDID情報の配列
     *
     * @type {Array<DidInfo>}
     * @memberof User
     */
    didInfos?: Array<DidInfo>;

    /**
     * (任意) アカウントに紐付けされたVC情報の配列
     *
     * @type {Array<VcInfo>}
     * @memberof User
     */
    vcInfos?: Array<VcInfo>;

    /**
     * (任意) アカウントに紐付けされたVP情報の配列
     *
     * @type {Array<VpInfo>}
     * @memberof User
     */
    vpInfos?: Array<VpInfo>;

    /**
     * (任意) アカウントに紐付けされたグループの配列
     *
     * @type {Array<Group>}
     * @memberof User
     */
    groups?: Array<Group>;

    /**
     * (任意) ユーザーアカウントがアップロードしたファイルの配列。
     *
     * @type {Array<UserToken>}
     * @memberof User
     */
    userTokens: Array<UserToken>;

    /**
     * (任意) このユーザーによって作成されたアカウントの配列
     *
     * @type {Array<User>}
     * @memberof User
     */
    createdUsers?: Array<User>;

    /**
     * (任意) アカウントに紐付けされたVC情報の配列
     *
     * @type {Array<VcInfo>}
     * @memberof User
     */
    createdVcInfos?: Array<VcInfo>;

    /**
     * (任意) アカウントに紐付けされたVP情報の配列
     *
     * @type {Array<VpInfo>}
     * @memberof User
     */
    createdVpInfos?: Array<VpInfo>;

    /**
     * (任意) アカウントに作成したグループの配列
     *
     * @type {Array<Group>}
     * @memberof User
     */
    createdGroups?: Array<Group>;

    /**
     * (任意) アカウントが作成したDID情報の配列
     *
     * @type {Array<DidInfo>}
     * @memberof User
     */
    createdDidInfos?: Array<DidInfo>;

    /**
     * (任意) ユーザーアカウントが作成したVCスキーマの配列。
     *
     * @type {Array<VcSchema>}
     * @memberof User
     */
    createdVcSchemas: Array<VcSchema>;

    /**
     * (任意) ユーザーアカウントが実行した検証結果の配列。
     *
     * @type {Array<Verification>}
     * @memberof User
     */
    createdVerifications: Array<Verification>;

    /**
     * (任意) Admin権限アカウントが送信したメールの配列(Adminロール以外の場合、関係のないカラム)
     *
     * @type {Array<Mail>}
     * @memberof User
     */
    createdMails?: Array<Mail>;

    /**
     * (任意) ユーザーアカウントがアップロードしたファイルの配列。
     *
     * @type {Array<any>}
     * @memberof User
     */
    createdFiles: Array<any>;

    /**
     * ユーザーアカウントの作成日時
     *
     * @type {string}
     * @memberof User
     * @example 2024-05-24T06:39:25.756Z
     */
    createdAt: string;

    /**
     * ユーザーアカウントの更新日時
     *
     * @type {string}
     * @memberof User
     * @example 2024-05-24T06:39:25.756Z
     */
    updatedAt: string;
}

/**
 * @export
 * @enum {string}
 */
export enum UserStatusEnum {
    Inactive = 'inactive',
    Activating = 'activating',
    Active = 'active',
    Deactive = 'deactive'
}
/**
 * @export
 * @enum {string}
 */
export enum UserRoleEnum {
    Admin = 'admin',
    User = 'user',
    Client = 'client'
}

